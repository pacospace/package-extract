apiVersion: v1
kind: Template
metadata:
  name: package-extract
  annotations:
    description: "Thoth: Package Extract Job Template"
    openshift.io/display-name: "Thoth: Package Extract Job Template"
    version: 0.4.0
    tags: thoth,ai-stacks,aistacks,package-extract
    template.openshift.io/documentation-url: https://github.com/Thoth-Station/
    template.openshift.io/long-description: >
      This template defines resources needed to run image analyzer in Thoth to OpenShift, it is used
      to create new OpenShift Jobs running the analyzer.
    template.openshift.io/provider-display-name: Red Hat, Inc.
  labels:
    template: package-extract
    app: thoth
    component: package-extract

parameters:
  - name: THOTH_ANALYZED_IMAGE
    displayName: Analyzer Image
    description: Thoth's Analyser container image name
    required: true
  - name: THOTH_ANALYZER_OUTPUT
    description: Remote where results should be send to
    displayName: Analyzer output
    required: true
  - name: THOTH_PACKAGE_EXTRACT_JOB_ID
    description: A job id for package extract job.
    displayName: Job identifier
    required: true
  - name: THOTH_LOG_PACKAGE_EXTRACT
    description: Log Level for package extract
    displayName: Log package extract
    required: true
    value: 'INFO'
  - name: THOTH_PACKAGE_EXTRACT_METADATA
    description: Additional metadata passed with the request.
    displayName: Package extract metadata
    required: true
  - name: THOTH_ANALYZER_NO_TLS_VERIFY
    description: Do not perform X.509 certificates verification
    displayName: Disable TLS verification
    required: false
    value: '0'
  - name: THOTH_REGISTRY_CREDENTIALS
    description: Credentials for connecting to registry to pull images from
    displayName: Registry credentials
    required: false
  - name: THOTH_REGISTRY
    description: Registry server from where Image is to be pulled
    displayName: Registry
    required: true
    value: 'docker-registry.default.svc:5000'
  - name: IMAGE_STREAM_PROJECT_NAME
    description: Project where ImageStream is present
    displayName: ImageStream Project
    required: true
    value: 'thoth-infra-stage'

objects:
  - apiVersion: batch/v1
    kind: Job
    metadata:
      name: ${THOTH_PACKAGE_EXTRACT_JOB_ID}
      labels:
        app: thoth
        component: package-extract
        operator: graph-sync
        task: package-extract
        mark: cleanup
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app: thoth
            component: package-extract
        spec:
          restartPolicy: Never
          automountServiceAccountToken: false
          containers:
            - name: package-extract
              image: "${THOTH_REGISTRY}/${IMAGE_STREAM_PROJECT_NAME}/package-extract"
              livenessProbe:
                # Give analyzer 30 minutes to compute results, kill it if it was not able result anything.
                tcpSocket:
                  port: 80
                initialDelaySeconds: 1800
                failureThreshold: 1
                periodSeconds: 10
              env:
                - name: THOTH_LOG_PACKAGE_EXTRACT
                  value: ${THOTH_LOG_PACKAGE_EXTRACT}
                - name: THOTH_PACKAGE_EXTRACT_METADATA
                  value: ${THOTH_PACKAGE_EXTRACT_METADATA}
                - name: THOTH_ANALYZER
                  value: package-extract
                - name: THOTH_ANALYZED_IMAGE
                  value: ${THOTH_ANALYZED_IMAGE}
                - name: THOTH_ANALYZER_OUTPUT
                  value: ${THOTH_ANALYZER_OUTPUT}
                - name: THOTH_ANALYZER_NO_TLS_VERIFY
                  value: ${THOTH_ANALYZER_NO_TLS_VERIFY}
                - name: THOTH_REGISTRY_CREDENTIALS
                  value: ${THOTH_REGISTRY_CREDENTIALS}
                - name: SENTRY_DSN
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: sentry-dsn
                - name: THOTH_DEPLOYMENT_NAME
                  valueFrom:
                    configMapKeyRef:
                      key: storage-bucket-name
                      name: thoth
              resources:
                limits:
                  memory: '256Mi'
                  cpu: '500m'
                requests:
                  memory: '256Mi'
                  cpu: '500m'
